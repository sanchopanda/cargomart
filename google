import os
import json
import gspread
import re
from google.oauth2.service_account import Credentials

# Путь к файлу с ключами и имя таблицы
creds_path = 'C:\\Users\\Даниил\\Desktop\\Logist Pro\\py\\credentials.json'
spreadsheet_name = 'Logist Pro'

# Укажите scopes
scopes = ['https://www.googleapis.com/auth/spreadsheets', 'https://www.googleapis.com/auth/drive']

# Загрузка учетных данных и авторизация
creds = Credentials.from_service_account_file(creds_path, scopes=scopes)
client = gspread.authorize(creds)

# Открытие таблицы
spreadsheet = client.open(spreadsheet_name)
worksheet = spreadsheet.sheet1  # Открываем первый лист

# Определение заголовков столбцов
headers = ['Дата', 'Тип груза', 'Загрузка', 'Выгрузка', 'Кузов', 'Ставка', 'Фирма', 'Город', 'ФИО', 'Телефон']
worksheet.append_row(headers)

# Путь к директории с JSON-файлами
json_dir = 'C:\\Users\\Даниил\\Desktop\\Logist Pro\\py\\requests'

def extract_value(text, key):
    """
    Извлекает значение по ключу из строки в формате "ключ: значение".
    """
    for part in text.split('\n'):
        if part.startswith(key):
            return part.split(':', 1)[1].strip()
    return ''

def extract_city(address):
    """
    Извлекает город из строки адреса, предполагая несколько возможных структур.
    """
    # Регулярное выражение для поиска возможных названий городов
    city_pattern = re.compile(r'\b(?:г\.\s*|город\s*)\w+', re.IGNORECASE)
    
    # Поиск всех возможных совпадений
    matches = city_pattern.findall(address)
    
    # Если совпадения найдены, возвращаем первое
    if matches:
        return matches[0].replace('г. ', '').replace('город ', '').strip()
    
    # Если нет совпадений, можно попробовать дополнительные логики
    # Например, попробовать извлечь второй элемент в строке
    parts = address.split(', ')
    if len(parts) > 1:
        return parts[1].strip()
    
    return ''

# Обработка каждого JSON-файла
for filename in os.listdir(json_dir):
    if filename.endswith('.json'):
        file_path = os.path.join(json_dir, filename)
        
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
            
            # Используем метод get для безопасного извлечения данных
            start_date = data.get('StartDate', '')
            cargo = data.get('Cargo', '')
            addresses_loading = [route['Address'] for route in data.get('Route', []) if route.get('TypeTitle') == 'Погрузка']
            addresses_unloading = [route['Address'] for route in data.get('Route', []) if route.get('TypeTitle') == 'Выгрузка']
            
            # Проверяем наличие ключа и значение не равно None
            proposal = data.get('Proposal', {})
            transport_summary = data.get('TransportSummary', '')
            transport_type = extract_value(transport_summary, 'Тип кузова')
            bet_dec = proposal.get('BetDec', '') if proposal else ''
            company_name = proposal.get('Company', {}).get('Name', '') if proposal else ''
            address_legal = proposal.get('Company', {}).get('AddressLegal', '') if proposal else ''
            contact_person = proposal.get('ContactPerson', {}) if proposal else {}
            contact_name = contact_person.get('Name', '') if contact_person else ''
            contact_phone = contact_person.get('Phone', '') if contact_person else ''
            
            # Извлечение города
            city = extract_city(address_legal)
            
            # Сбор данных в строку
            row = [
                start_date,
                cargo,
                ', '.join(addresses_loading),
                ', '.join(addresses_unloading),
                transport_type,
                bet_dec,
                company_name,
                city,
                contact_name,
                contact_phone
            ]
            
            try:
                worksheet.append_row(row)
            except Exception as e:
                print(f"Ошибка при добавлении строки в таблицу: {e}")

print("Данные успешно добавлены в таблицу.")
